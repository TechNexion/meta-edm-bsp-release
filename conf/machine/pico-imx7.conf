#@TYPE: Machine
#@NAME: pico-imx7
#@SOC: i.MX7/Solo/Dual/UtraLowPower
#@DESCRIPTION: Machine configuration for PICO-IMX7 with QCA(Qualcomm)/BRCM(Broadcom) WLAN module
#@MAINTAINER: Po Cheng <po.cheng@technexion.com>

MACHINEOVERRIDES =. "mx7:mx7d:"

include conf/machine/include/imx-base.inc
include conf/machine/include/tune-cortexa7.inc

MACHINE_SOCARCH_FILTER_append_mx7 = "virtual/libopenvg virtual/libgles1 virtual/libgles2 virtual/egl virtual/mesa virtual/libgl virtual/libg2d"

#
# Kernel Specifics
#
PREFERRED_PROVIDER_virtual/kernel ?= "linux-tn-imx"
PREFERRED_PROVIDER_virtual/kernel_mx7 = "linux-tn-imx"

# Add kernel modules
MACHINE_EXTRA_RRECOMMENDS += "\
    kernel-module-qcacld-tn \
"

KERNEL_DEVICETREE ?= "imx7d-pico-qca_pi.dtb imx7d-pico_pi.dtb \
                      imx7d-pico-qca_nymph.dtb imx7d-pico_nymph.dtb \
                      imx7d-pico-qca_dwarf.dtb imx7d-pico_dwarf.dtb \
                      imx7d-pico-qca_hobbit.dtb imx7d-pico_hobbit.dtb \
"

KERNEL_IMAGETYPE = "zImage"

#
# Bootloader Specifics
#
PREFERRED_PROVIDER_u-boot = "u-boot-edm"
PREFERRED_PROVIDER_u-boot_mx7 = "u-boot-edm"
PREFERRED_PROVIDER_virtual/bootloader = "u-boot-edm"
PREFERRED_PROVIDER_virtual/bootloader_mx7 = "u-boot-edm"

UBOOT_MAKE_TARGET = ""
UBOOT_SUFFIX = "img"
SPL_BINARY = "SPL"
UBOOT_MACHINE = "pico-imx7d_spl_defconfig"

# Ensure uEnv.txt will be available at rootfs time
do_rootfs[depends] += "u-boot-uenv:do_deploy"

UENV_FILENAME = "uEnv.txt"
BOOT_SCRIPTS = "${UENV_FILENAME}:uEnv.txt"

#
# Extra Stuff
#
MACHINE_FEATURES += "bluetooth pci wifi touchscreen"

# mx7 GPU libraries
PREFERRED_PROVIDER_virtual/egl_mx7d = "mesa"
PREFERRED_PROVIDER_virtual/libgles1_mx7d = "mesa"
PREFERRED_PROVIDER_virtual/libgles2_mx7d = "mesa"
PREFERRED_PROVIDER_virtual/libgl_mx7d = "mesa"
PREFERRED_PROVIDER_virtual/libg2d_mx7d = ""

MACHINEOVERRIDES_EXTENDER_mx7d   = "imxpxp:imxepdc"

# MESA DRI library
XSERVER += "mesa-driver-swrast"

MACHINE_EXTRA_RRECOMMENDS += " \
  broadcom-bluetooth \
  openssh-sftp-server \
  libsocketcan \
  bash hostapd dnsmasq haveged create-ap iptables \
"

OVERRIDES .= ":${@'' if d.getVar('WIFI_MODULES', True) is None else ':'.join([wifi.lower() for wifi in d.getVar('WIFI_MODULES', True).split(' ') if wifi])}"
MACHINE_FIRMWARE_remove = "linux-firmware-ath10k firmware-imx-brcm"
MACHINE_FIRMWARE_append_qca = " linux-firmware-qca-tn"
MACHINE_FIRMWARE_append_brcm = " linux-firmware-brcm-tn"
MACHINE_FIRMWARE_append_ath-pci = " linux-firmware-ath10k-tn"

#
# Peripherals
#
# Set Serial console
SERIAL_CONSOLE = "115200 ttymxc4"

HOSTTOOLS_NONFATAL += "git-lfs"
